addQualifier;inserting a qualifier (i.e., volatile, const, and restrict) of the variable in the list ['i', 'j', 'k']
remQualifier;removing a qualifier (i.e., volatile, const, and restrict) of the variable in the list ['i', 'j', 'k']
addModifier;inserting a modifier (i.e., long, short, signed, and unsigned) of the variable in the list ['i', 'j', 'k']
remModifier;removing a modifier (i.e., long, short, signed, and unsigned) of the variable in the list ['i', 'j', 'k']
repContant;replacing a constant with another valid one of a variable in the list ['i', 'j', 'k'] 
repBinary;replacing a binary operator with another valid one on the variables in the list ['i', 'j', 'k']
repUnary;replacing an unary operator on the variables in the list ['i', 'j', 'k']
remUnary;removing an unary operator on the variables in the list ['i', 'j', 'k']
repUnary;removing an unary operator on the variables in the list ['i', 'j', 'k'] only between line 21 and line 27 in the original given program (if any)
repVar;replacing a variable in the list ['i', 'j', 'k'] with another valid existing one in the list ['a', 's', 'v']  
addIf;inserting a branch (i.e., if) statement with length  1 - 5  lines in the statement body only between line 21 and line 27 in the original given program and reusing the variables in the list ['a', 's', 'v'] 
addWhile;inserting a loop (i.e., while or for) statement with length  1 - 5  lines in the statement body only between line 21 and line 27 in the original given program and reusing the variables in the list ['a', 's', 'v'] 
addFunction;inserting a function call with length  1 - 5  lines in the statement body only between line 21 and line 27 in the original given program and reusing the variables in the list ['a', 's', 'v'] 
addGoto;inserting a goto statement with length  1 - 5  lines in the statement body only between line 21 and line 27 in the original given program and reusing the variables in the list ['a', 's', 'v'] 
