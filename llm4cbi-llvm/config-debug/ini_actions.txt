addQualifier;inserting a qualifier (i.e., volatile, const, and restrict) of the variable in the list ['d', 'f'] only between line 14 and line 19 in the original given program (if any)
addModifier;inserting a modifier (i.e., long, short, signed, and unsigned) of the variable in the list ['d', 'f'] only between line 14 and line 19 in the original given program (if any)
remModifier;removing a modifier (i.e., long, short, signed, and unsigned) of the variable in the list ['d', 'f'] only between line 14 and line 19 in the original given program (if any)
repContant;replacing a constant with another valid one of a variable in the list ['d', 'f'] only between line 14 and line 19 in the original given program (if any)
repBinary;replacing a binary operator with another valid one on the variables in the list ['d', 'f'] only between line 14 and line 19 in the original given program (if any)
repRemUnary;replacing or removing an unary operator on the variables in the list ['d', 'f'] only between line 14 and line 19 in the original given program (if any)
repVar;replacing a variable in the list ['d', 'f'] with another valid existing one in the list ['a', 'd'] only between line 14 and line 19 in the original given program (if any) addIf;inserting a branch (i.e., if) statement with length  1 - 10  lines in the statement body only between line 14 and line 19 in the original given program and reusing the variables in the list ['a', 'd'] 
addWhile;inserting a loop (i.e., while or for) statement with length  1 - 10  lines in the statement body only between line 14 and line 19 in the original given program and reusing the variables in the list ['a', 'd'] 
addFunction;inserting a function call with length  1 - 10  lines in the statement body only between line 14 and line 19 in the original given program and reusing the variables in the list ['a', 'd'] 
addGoto;inserting a goto statement with length  1 - 10  lines in the statement body only between line 14 and line 19 in the original given program and reusing the variables in the list ['a', 'd'] 
